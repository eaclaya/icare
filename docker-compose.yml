services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: icare-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - app-network
        depends_on:
            - db
            - redis
            - mailhog

    db:
        image: mariadb:10.9
        container_name: icare-db
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
        ports:
            - "${DB_PORT:-3306}:3306"
        volumes:
            - mysqldata:/var/lib/mysql
        networks:
            - app-network

    # nginx:
    #     image: nginx:latest
    #     container_name: icare-nginx
    #     restart: unless-stopped
    #     ports:
    #         - "80:80"
    #     volumes:
    #         - .:/var/www/html
    #         - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    #     depends_on:
    #         - app
    #     networks:
    #         - app-network

    typesense:
        image: "typesense/typesense:26.0"
        container_name: icare-typesense
        restart: unless-stopped
        ports:
            - "${TYPESENSE_PORT:-8108}:8108"
        volumes:
            - typesensedata:/data
        environment:
            TYPESENSE_API_KEY: "${TYPESENSE_API_KEY:-xyz}"
            TYPESENSE_DATA_DIR: /data
        networks:
            - app-network
        healthcheck:
            test:
                - CMD
                - wget
                - "--no-verbose"
                - "--spider"
                - "http://localhost:8108/health"
            retries: 5
            timeout: 7s

    redis:
        image: redis:alpine
        container_name: icare-redis
        restart: always
        ports:
            - "${REDIS_PORT:-6379}:6379"
        volumes:
            - redisdata:/data
        networks:
            - app-network

    mailhog:
        image: mailhog/mailhog
        container_name: icare-mailhog
        restart: unless-stopped
        ports:
            - "${MAIL_PORT:-1025}:1025"
            - "${MAIL_WEB_PORT:-8025}:8025"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    mysqldata:
        driver: local
    redisdata:
        driver: local
    typesensedata:
        driver: local
